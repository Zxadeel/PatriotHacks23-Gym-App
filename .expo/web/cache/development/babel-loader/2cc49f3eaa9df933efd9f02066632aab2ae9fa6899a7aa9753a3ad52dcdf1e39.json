{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewOrExperienced = function NewOrExperienced() {\n  var navigation = useNavigation();\n  var handleSelection = function handleSelection(level) {\n    navigation.navigate('MuscleSelect', {\n      liftingLevel: level\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#ADD8E6'\n    },\n    children: [_jsx(Text, {\n      children: \"How new are you to lifting?\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      children: [_jsx(Button, {\n        title: \"I'm brand new!\",\n        onPress: function onPress() {\n          return handleSelection('new');\n        }\n      }), _jsx(Image, {\n        source: require(\"../../assets/baby.png\"),\n        style: {\n          width: 50,\n          height: 50,\n          marginLeft: 10\n        }\n      })]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 10\n      },\n      children: [_jsx(Button, {\n        title: \"I already have some experience.\",\n        onPress: function onPress() {\n          return handleSelection('experienced');\n        }\n      }), _jsx(Image, {\n        source: require(\"../../assets/lifter.png\"),\n        style: {\n          width: 50,\n          height: 50,\n          marginLeft: 10\n        }\n      })]\n    })]\n  });\n};\nexport default NewOrExperienced;","map":{"version":3,"names":["React","View","Text","Button","Image","useNavigation","jsx","_jsx","jsxs","_jsxs","NewOrExperienced","navigation","handleSelection","level","navigate","liftingLevel","style","flex","justifyContent","alignItems","backgroundColor","children","flexDirection","title","onPress","source","require","width","height","marginLeft","marginTop"],"sources":["/Users/saranramesh/PatriotHacks23-Gym-App/src/screens/NewOrExperienced.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Button, Image } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst NewOrExperienced = () => {\n  const navigation = useNavigation();\n\n  const handleSelection = (level) => {\n    navigation.navigate('MuscleSelect', { liftingLevel: level });\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#ADD8E6' }}>\n      <Text>How new are you to lifting?</Text>\n\n      {/* Wrap buttons and images together */}\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <Button title=\"I'm brand new!\" onPress={() => handleSelection('new')} />\n        <Image\n          source={require('../../assets/baby.png')} // Replace with actual image path\n          style={{ width: 50, height: 50, marginLeft: 10 }} // Adjust width and height as needed\n        />\n      </View>\n\n      <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\n        <Button title=\"I already have some experience.\" onPress={() => handleSelection('experienced')} />\n        <Image\n          source={require('../../assets/lifter.png')}  // Replace with actual image path\n          style={{ width: 50, height: 50, marginLeft: 10 }} // Adjust width and height as needed\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default NewOrExperienced;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAE1B,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAElC,IAAMO,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAAK,EAAK;IACjCF,UAAU,CAACG,QAAQ,CAAC,cAAc,EAAE;MAAEC,YAAY,EAAEF;IAAM,CAAC,CAAC;EAC9D,CAAC;EAED,OACEJ,KAAA,CAACR,IAAI;IAACe,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,GACnGd,IAAA,CAACL,IAAI;MAAAmB,QAAA,EAAC;IAA2B,CAAM,CAAC,EAGxCZ,KAAA,CAACR,IAAI;MAACe,KAAK,EAAE;QAAEM,aAAa,EAAE,KAAK;QAAEH,UAAU,EAAE;MAAS,CAAE;MAAAE,QAAA,GAC1Dd,IAAA,CAACJ,MAAM;QAACoB,KAAK,EAAC,gBAAgB;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,eAAe,CAAC,KAAK,CAAC;QAAA;MAAC,CAAE,CAAC,EACxEL,IAAA,CAACH,KAAK;QACJqB,MAAM,EAAEC,OAAO,wBAAwB,CAAE;QACzCV,KAAK,EAAE;UAAEW,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAG;MAAE,CAClD,CAAC;IAAA,CACE,CAAC,EAEPpB,KAAA,CAACR,IAAI;MAACe,KAAK,EAAE;QAAEM,aAAa,EAAE,KAAK;QAAEH,UAAU,EAAE,QAAQ;QAAEW,SAAS,EAAE;MAAG,CAAE;MAAAT,QAAA,GACzEd,IAAA,CAACJ,MAAM;QAACoB,KAAK,EAAC,iCAAiC;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,eAAe,CAAC,aAAa,CAAC;QAAA;MAAC,CAAE,CAAC,EACjGL,IAAA,CAACH,KAAK;QACJqB,MAAM,EAAEC,OAAO,0BAA0B,CAAE;QAC3CV,KAAK,EAAE;UAAEW,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAG;MAAE,CAClD,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAenB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}